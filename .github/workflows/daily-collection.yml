name: Daily Consultancy News Collection

on:
  schedule:
    # Run daily at 8:00 AM UTC (4:00 AM EST, 9:00 AM CET)
    - cron: '0 8 * * *'
  workflow_dispatch:
    # Allow manual execution

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  collect-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create necessary directories
      run: |
        mkdir -p config
        mkdir -p data/reports
        mkdir -p data/deduplication
        mkdir -p logs
        
    - name: Setup environment variables
      run: |
        echo "Setting up environment variables..."
        echo "EMAIL_WEBHOOK_URL=${{ secrets.EMAIL_WEBHOOK_URL }}" >> $GITHUB_ENV
        echo "WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}" >> $GITHUB_ENV
        echo "LOG_LEVEL=INFO" >> $GITHUB_ENV
        
    - name: Run consultancy news collection
      id: collection
      run: |
        echo "🚀 Starting consultancy news collection..."
        
        # Run the collection via API call to Railway deployment
        RAILWAY_URL="${{ secrets.RAILWAY_URL }}"
        WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}"
        
        if [ -n "$RAILWAY_URL" ]; then
          echo "📡 Triggering collection via Railway webhook..."
          
          RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "X-Webhook-Secret: $WEBHOOK_SECRET" \
            "$RAILWAY_URL/webhook/collect" \
            -d '{"source": "github-actions", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}')
          
          HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          RESPONSE_BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
          
          echo "Response Status: $HTTP_STATUS"
          echo "Response Body: $RESPONSE_BODY"
          
          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "✅ Collection completed successfully via Railway"
            
            # Extract statistics from response - FIXED INDENTATION
            TOTAL_ARTICLES=$(echo "$RESPONSE_BODY" | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    print(data.get('total_articles', 0))
except:
    print(0)
")
            
            RELEVANT_ARTICLES=$(echo "$RESPONSE_BODY" | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    print(data.get('relevant_articles', 0))
except:
    print(0)
")
            
            echo "total_articles=$TOTAL_ARTICLES" >> $GITHUB_OUTPUT
            echo "relevant_articles=$RELEVANT_ARTICLES" >> $GITHUB_OUTPUT
            echo "collection_success=true" >> $GITHUB_OUTPUT
            
          else
            echo "❌ Collection failed via Railway (Status: $HTTP_STATUS)"
            echo "collection_success=false" >> $GITHUB_OUTPUT
          fi
          
        else
          echo "⚠️ RAILWAY_URL not configured, skipping remote collection"
          echo "collection_success=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Update workflow summary
      if: always()
      run: |
        echo "## 📊 Consultancy News Collection Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Project**: Peers Consulting & Technology" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.collection.outputs.collection_success }}" == "true" ]; then
          echo "✅ **Status**: Collection completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "📰 **Total Articles**: ${{ steps.collection.outputs.total_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "⭐ **Relevant Articles**: ${{ steps.collection.outputs.relevant_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "📧 **Email**: Sent to heitor.a.marin@gmail.com" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status**: Collection failed" >> $GITHUB_STEP_SUMMARY
          echo "📰 **Total Articles**: 0" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏢 Monitored Consultancies" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **BIG 4**: Deloitte, PwC, EY, KPMG" >> $GITHUB_STEP_SUMMARY
        echo "- **MBB**: McKinsey, BCG, Bain" >> $GITHUB_STEP_SUMMARY
        echo "- **Global**: Accenture, IBM Consulting, Capgemini" >> $GITHUB_STEP_SUMMARY
        echo "- **Regional**: Oliver Wyman, Roland Berger, A.T. Kearney" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Collection Details" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        
    - name: Send notification on failure
      if: failure()
      run: |
        echo "🚨 Sending failure notification..."
        
        RAILWAY_URL="${{ secrets.RAILWAY_URL }}"
        WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}"
        
        if [ -n "$RAILWAY_URL" ]; then
          curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "X-Webhook-Secret: $WEBHOOK_SECRET" \
            "$RAILWAY_URL/api/email/alert" \
            -d '{
              "alert_type": "GitHub Actions Failure",
              "message": "Daily consultancy news collection failed. Check workflow logs for details.",
              "workflow_id": "${{ github.run_id }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
            }' || echo "Failed to send notification"
        fi

